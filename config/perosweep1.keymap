#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// #define MACOS   0
// #define MACSYM  1
// #define FKEYS   2
// #define ARROW   3 
// #define MISC    4 


&sl {
    release-after-ms = <500>;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    behaviors {
        lm: home_row_left {
            compatible = "zmk,behavior-hold-tap";
            label = "home_row_left";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick_tap_ms = <180>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33>;
        };
        rm: home_row_right {
            compatible = "zmk,behavior-hold-tap";
            label = "home_row_right";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick_tap_ms = <180>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        
        macos {
        bindings = <

        &kp Q         &kp W       &kp E         &lt 3 R      &lt 4 T    &kp Y      &kp U        &kp I         &kp O        &kp P
        &kp A         &lm LALT S  &lm LCTRL D   &lm LSHIFT F &lm LGUI G &rm RGUI H &rm RSHIFT J &rm RCTRL K   &rm RALT L   &kp SEMICOLON  
        &kp Z         &lm RALT X  &kp C         &kp V        &kp B      &kp N      &lt 3 M      &kp COMMA     &rm RALT DOT &kp SLASH        

                                          &lt 1 ENTER     &lt 2 ESC   &lt 2 SPACE  &lt 1 UNDER
        >;
        };

        // TODO: We have to wait for `&sl` to time out for `&caps_word` to work.
        macsym {
        bindings = <

        &kp EXCL     &kp AT     &kp LBRC   &kp RBRC  &kp TILDE    &none     &kp CARET &kp MINUS  &kp SQT  &kp LG(GRAVE)
        &kp LALT 3   &kp DLLR   &kp LPAR   &kp RPAR  &kp PIPE     &kp LGUI  &kp EQUAL &kp UNDER  &kp DQT  &kp INS
        &kp PRCNT    &kp HASH   &kp LBKT   &kp RBKT  &kp AMPS     &kp GRAVE &kp BSLH  &kp HOME   &kp END  &none

                                            &none  &kp LBKT   &kp RBKT  &kp LG(GRAVE)
        >;
        };

        // TODO: We have to wait for `&sl` to time out for `&caps_word` to work.
        fkeys {
        bindings = <

        &kp F12 &kp F11      &kp F10       &kp F12        &none      &KP EQUAL    &kp N7        &kp N8       &kp N9      &kp STAR
        &kp F8  &lm LALT F7  &lm LCTRL F6  &lm LSHIFT F5  &kp LGUI   &rm LGUI DOT &rm RSHIFT N4 &rm RCTRL N5 &rm RALT N6 &kp PLUS
        &kp F4  &kp F3       &kp F2        &kp F1         &none      &kp N0       &kp N1        &kp N2       &kp N3      &kp MINUS

                                           &none          &none      &caps_word  &kp DEL
        >;
        };

        // TODO: We have to wait for `&sl` to time out for `&caps_word` to work.
        arrows {
        bindings = <

        &none     &none     &none     &none     &none     &none     &none     &none     &none     &none
        &none     &none     &none     &none     &none     &none     &none     &none     &none     &none     
        &none     &none     &none     &none     &none     &none     &none     &none     &none     &none

                                      &none     &none     &none     &none  
        >;
        };

        // TODO: We have to wait for `&sl` to time out for `&caps_word` to work.
        system {
        bindings = <

        &kp EXCL  &kp AT     &kp LBKT   &kp RBKT  &kp TILDE    &none     &kp CARET &kp MINUS  &kp SQT  &kp LG(GRAVE)
        &kp LA(3) &kp DLLR   &kp LPAR   &kp RPAR  &kp PIPE     &kp LGUI  &kp EQUAL &kp UNDER  &kp DQT  &kp INS
        &kp PRCNT &kp HASH   &kp LBRC   &kp RBRC  &kp AMPS     &kp GRAVE &kp BSLH  &kp HOME   &kp END  &none

                                            &none  &kp LBKT   &kp RBKT  &kp LG(GRAVE)
        >;
        };

    };
};
